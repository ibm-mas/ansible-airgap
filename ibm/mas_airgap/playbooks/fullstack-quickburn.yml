---
- hosts: localhost
  any_errors_fatal: true

# 1. Deploy & configure the cluster
# -----------------------------------------------------------------------------
- name: Deploy & configure quickburn cluster in Fyre
  import_playbook: ocp/provision-quickburn.yml

# 2. Install MongoDb
# -----------------------------------------------------------------------------
#- name: Install MongoDb (Community Edition)
#  import_playbook: ../dependencies/install-mongodb-ce.yml
#  vars:
#    mongodb_storage_class: ibmc-block-gold
#    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"


# 3. Install AMQ Streams
# -----------------------------------------------------------------------------
#- name: Install AMQ Streams (Apache Kafka)
#  import_playbook: ../dependencies/install-amqstreams.yml
#  vars:
#    kafka_namespace: amq-streams
#    kafka_cluster_name: maskafka
#    kafka_cluster_size: "{{ lookup('env', 'KAFKA_CLUSTER_SIZE') | default('small', true) }}"
#    kafka_storage_class: ibmc-block-gold
#    kafka_user_name: masuser
#    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"


# 4. Install CP4D services & configure Db2
# -----------------------------------------------------------------------------
#- name: Install CP4D services & configure Db2
#  import_playbook: cp4d/install-fullstack.yml
#  vars:
#    cpd_storage_class: ibmc-file-gold-gid
#    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"



# 5. Install & configure MAS
# Temporary hack for Manage, because the operator is missing critical
# database configuration that requires manual intervention to set up.
#- name: Db2 configuration hack for Manage
#  import_playbook: mas/hack-manage-db2.yml
#  vars:
    # Ensure these are kept in sync with the values used in cp4d/install-db2.yml
#    cpd_meta_namespace: cpd-meta-ops
#    db2wh_username: db2inst1
#    db2wh_dbname: BLUDB
    # TODO: The default that is built into the manage operator isn't following
    # the naming conventions for MAS.  It should have been some combination of
    # {{mas_instance_id}} {{mas_app_id}} and {{mas_workspace_id}} so that it's
    # friendly to shared database sources in low cost environments, and easily
    # templateable in automation such as this :(
#    db2wh_schema: maximo


# 6. Install & configure MAS
# -----------------------------------------------------------------------------
- name: Install & configure MAS
  import_playbook: mas/install-suite.yml
  vars:
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"
    airgap_install: true

# 7. Install SLS
# -----------------------------------------------------------------------------
- name: Install SLS
  import_playbook: sls/install-sls.yml
  vars:
    sls_storage_class: ocs-storagecluster-cephfs
    mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

    # Default to re-using the MAS entitlement key if we do not provide a specific one for SLS
    sls_entitlement_username: "{{ lookup('env', 'SLS_ENTITLEMENT_USERNAME') | default('cp', true) }}"
    sls_entitlement_key: "{{ lookup('env', 'SLS_ENTITLEMENT_KEY') | default(lookup('env', 'IBM_ENTITLEMENT_KEY'), true) }}"

    # Use the generated mongodb configuration
    mongodb_namespace: "{{ lookup('env', 'MONGODB_NAMESPACE') | default('mongoce', True) }}"
    mongodb_cfg_file: "{{ mas_config_dir }}/mongo-{{ mongodb_namespace }}.yml"

    # Bootstrap from the mas_config_dir
    bootstrap:
      license_id: "{{ lookup('env', 'SLS_LICENSE_ID') | default('', true) }}"
      registration_key: "{{ lookup('env', 'SLS_REGISTRATION_KEY') | default('', true) }}"
      entitlement_file: "{{mas_config_dir}}/entitlement.lic"


# 8. Install & Configure Manage application
# -----------------------------------------------------------------------------
#- name: Install Manage
#  import_playbook: ../mas/install-app.yml
#  vars:
#    mas_app_id: manage

# Note that this sample playbook is always assuming a workspace ID of masdev,
# this can easily be modified when creating your own playbooks.
#- name: Configure Manage
#  import_playbook: ../mas/configure-app.yml
#  vars:
#    mas_app_id: manage
#    mas_workspace_id: masdev
