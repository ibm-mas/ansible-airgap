---

# 1. Check for undefined properties that do not have a default
# -----------------------------------------------------------------------------
- name: "Fail if required properties are not provided"
  assert:
    that:
      - case_name is defined and case_name != ""
      - case_bundle_dir is defined and case_bundle_dir != ""
      - case_inventory_name is defined and case_inventory_name != ""
      - registry_public_host is defined and registry_public_host != ""
      - ibm_entitlement_key is defined and ibm_entitlement_key != ""
    fail_msg: "One or more required properties are missing"


# 2. Check for required software
# -----------------------------------------------------------------------------
- name: "Test if cloudctl is installed"
  shell: cloudctl version
  register: _cloudctl_version
  ignore_errors: true

- name: "Fail if cloudctl is not installed"
  assert:
    that: ( _cloudctl_version['rc'] == 0 )
    fail_msg: "cloudctl tool must be installed."


# 3. Debug
# -----------------------------------------------------------------------------
- name: "Airgap setup configuration"
  debug:
    msg:
      - "Case Name .............................. {{ case_name }}"
      - "Case Bundle Directory .................. {{ case_bundle_dir }}"
      - "Inventory Name ......................... {{ case_inventory_name }}"
      - "Registry Public Host ................... {{ registry_public_host }}"


# 4. Ensure *.sh files in the case bundle are executable
# -----------------------------------------------------------------------------
- name: "Make all CASE bundle shell scripts executable"
  shell: chmod u+x {{ case_bundle_dir }}/case/{{ case_name }}/inventory/{{ case_inventory_name }}/files/*.sh


# 5. Set up Authentication for ICR
# -----------------------------------------------------------------------------
# TODO: For now this is limited to unauthenticed registry (like the one set up by the "registry" role)

- name: "Setup ICR Registry Credentials"
  shell: >
    cloudctl case launch --action configureCredsAirgap \
      --case {{ case_bundle_dir }}/case/{{ case_name }} \
      --inventory {{ case_inventory_name }} \
      --tolerance 1 \
      --args "--registry cp.icr.io --user cp --pass {{ ibm_entitlement_key }}"
  register: configureCredsResult


# 6. Execute the Mirror
# -----------------------------------------------------------------------------
- name: Mirror Images
  shell: >
    export USE_SKOPEO=True && cloudctl case launch --action mirror-images \
      --case {{ case_bundle_dir }}/case/{{ case_name }} \
      --inventory {{ case_inventory_name }} \
      --tolerance 1 \
      --args "--registry {{ registry_public_url }} --inputDir {{ case_archive_dir }} --skipDelta true" \
    | tee {{ case_bundle_dir }}/mirror-{{ case_name }}-{{ case_inventory_name }}.log
  register: mirror_result
  # This can intermittently fail with "504 Gateway Time-out" errors, retry until sucessful.
  until: mirror_result['rc'] == 0 or mirror_result['stdout'] is not search('504 Gateway Time', multiline=True)
  retries: 10

- name: "Debug Mirror"
  debug:
    msg: "{{ mirror_result.stdout_lines }}"
